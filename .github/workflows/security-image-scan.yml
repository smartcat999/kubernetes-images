name: SecurityImageScan

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch:
    inputs:
      registry:
        description: 'Image registry'
        required: true
        default: 'registry.cn-beijing.aliyuncs.com/kse/'
        type: String
      tag:
        description: 'Image release tag'
        required: true
        default: 'latest'
        type: string

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ${{ inputs.registry }}
  TAG: ${{ inputs.tag }}

jobs:
  GrypeImageScan:

    runs-on: ubuntu-latest
    environment: dev
    permissions:
      contents: read
      security-events: write


    steps:
      - name: Run the Anchore Grype scan action
        uses: anchore/scan-action@d5aa5b6cb9414b0c7771438046ff5bcfa2854ed7
        id: scan-ks-apiserver
        with:
          image: ${{ env.REGISTRY }}ks-apiserver:${{ env.TAG }}
          fail-build: false
          severity-cutoff: critical

      - name: Upload Grype scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.scan-ks-apiserver.outputs.sarif }}
          category: 'grype-ks-apiserver'

      - name: Run the Anchore Grype scan action
        uses: anchore/scan-action@d5aa5b6cb9414b0c7771438046ff5bcfa2854ed7
        id: scan-ks-controller-manager
        with:
          image: ${{ env.REGISTRY }}ks-controller-manager:${{ env.TAG }}
          fail-build: false
          severity-cutoff: critical

      - name: Upload Grype scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.scan-ks-controller-manager.outputs.sarif }}
          category: 'grype-ks-controller-manager'


  TrivyImageScan:

    runs-on: ubuntu-latest
    environment: dev
    permissions:
      contents: read
      security-events: write


    steps:
      - name: Run the Trivy scan action
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          image-ref: ${{ env.REGISTRY }}ks-apiserver:${{ env.TAG }}
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'trivy-ks-apiserver'

      - name: Run the Trivy scan action
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          image-ref: ${{ env.REGISTRY }}ks-controller-manager:${{ env.TAG }}
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'trivy-ks-controller-manager'


  AnchoreBuildScan:
    permissions:
      contents: write # required to upload to the Dependency submission API
    runs-on: ubuntu-latest
    steps:
      - name: Scan ks-apiserver image dependency
        uses: anchore/sbom-action@bb716408e75840bbb01e839347cd213767269d4a
        with:
          image: ${{ env.REGISTRY }}ks-apiserver:${{ env.TAG }}
          artifact-name: ks-apiserver-image.spdx.json
          dependency-snapshot: true

      - name: Scan ks-controller-manager image dependency
        uses: anchore/sbom-action@bb716408e75840bbb01e839347cd213767269d4a
        with:
          image: ${{ env.REGISTRY }}ks-controller-manager:${{ env.TAG }}
          artifact-name: ks-controller-manager-image.spdx.json
          dependency-snapshot: true

  ImageSecurityCheck:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Image tools check
        uses: ./.github/workflows/security-action/ # Uses an action in the root directory
        id: ks-apiserver-tools
        with:
          image-check: tools
          image: ${{ env.REGISTRY }}ks-apiserver:${{ env.TAG }}
          output: tools.txt

      - name: Archive image check results
        uses: actions/upload-artifact@v3
        with:
          name: ks-apiserver-tools-result
          path: tools.txt

      - name: Image permission check
        uses: smartcat999/docker-image-action@v1 # Uses an action in the root directory
        id: ks-apiserver-permission
        with:
          image-check: permission
          image: ${{ env.REGISTRY }}ks-apiserver:${{ env.TAG }}
          output: permission.txt

      - name: Archive image check results
        uses: actions/upload-artifact@v3
        with:
          name: ks-apiserver-permission-result
          path: permission.txt

      - name: Image tools check
        uses: smartcat999/docker-image-action@v1 # Uses an action in the root directory
        id: ks-controller-manager-tools
        with:
          image-check: tools
          image: ${{ env.REGISTRY }}ks-controller-manager:${{ env.TAG }}
          output: tools.txt

      - name: Archive image check results
        uses: actions/upload-artifact@v3
        with:
          name: ks-controller-manager-tools-result
          path: tools.txt

      - name: Image permission check
        uses: smartcat999/docker-image-action@v1 # Uses an action in the root directory
        id: ks-controller-manager-permission
        with:
          image-check: permission
          image: ${{ env.REGISTRY }}ks-controller-manager:${{ env.TAG }}
          output: permission.txt

      - name: Archive image check results
        uses: actions/upload-artifact@v3
        with:
          name: ks-controller-manager-permission-result
          path: permission.txt

  LocaActionCheck:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Image tools check
        uses: ./.github/local-action/ # Uses an action in the root directory
        id: local-action-test
        with:
          image: node:latest